<?xml version="1.0" encoding="UTF-8"?>

<!-- 
configuration
scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载， 默认值为true。
scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。 当scan为true时，此属性生效。 默认的时间间隔为1分钟。
debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。 默认值为false。
 -->
<configuration scan="true" scanPeriod="60" debug="true">
	
	<!--定义日志文件的存储地址 
		勿在 LogBack 的配置中使用相对路径-->
	<property name="LOG_HOME" value="E:/temp/workspace/eclipse/spaceone/study/logs/study-demo" />
	
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
	
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	
	</appender>
	
	<!-- 按照每天生成日志文件 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名-->
			<FileNamePattern>${LOG_HOME}/Study-Demo.log.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
		
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	
	<appender name="PROJECT-TASK" class="ch.qos.logback.classic.db.DBAppender">    
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">    
            <dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">                   
                <driverClass>net.sf.log4jdbc.DriverSpy</driverClass>    
                <url>jdbc:log4jdbc:mysql://127.0.0.1:3306/study</url>    
                <user>root</user>    
                <password>password</password>  
                <sqlDialect class="ch.qos.logback.core.db.dialect.MySQLDialect" />     
            </dataSource>    
        </connectionSource>  
    </appender>  
    
	<!-- 日志输出级别 
	DEBUG
	INFO
	WARN
	ERROR
	
	用level属性来设置打印级别，依次为（大小写无关）：
	 ALL，TRACE, DEBUG, INFO, WARN, ERROR和OFF，
	还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。 
	如果未设置此属性，那么当前loger将会继承上级的级别。
	()
	-->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		
		<!-- 
		<appender-ref ref="FILE" />
		<appender-ref ref="PROJECT-TASK" />
		 -->
	</root>

</configuration>
